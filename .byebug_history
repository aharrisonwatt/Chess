exit
piece.valid_moves
piece.pos
c
display piece.valid_moves.empty?
continue
finish
c
piece.valid_moves
piece.pos
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
exit
piece.pos
piece.valid_moves
piece
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
n
piece.valid_moves.empty?
piece.valid_moves.empty
piece.valid_moves
piece
exit
c
n
s
pieces.select { |piece| piece.color == color }
pieces
n
in_check?(:white)
color
c
exit
@board[[4,7]]
@board[4,7]
@board.pos[4,7]
@current_player.color
@current_play.color
@board.checkmate?(@current_player.color)
finish
c
@board.checkmate?(@current_player.color)
n
finish
@board.checkmate?(@current_player.color)
finish
n
@board.checkmate?(@current_player.color)
finish
@board.checkmate?(@current_player.color)
finish
@board.checkmate?(@current_player.color)
finish
@board.checkmate?(@current_player.color)
finish
@board.checkmate?(@current_player.color)
@board.checkmate?
finish
exit
self[[0,0]].color
self[[0,0]]
self[0,0]
self
all_pos
s
n
all_pieces(:white)
in_check?(:black)
color
finish
exit
test_board.in_check?(color)
color
n
new_pos
test_board
finish
c
n
c
n
c
exit
c
possible_moves
end_pos
c
end_pos
c
exit
self[start].valid_move?(end_pos)
self[start]
start
self[start]
end_pos
start
exit
self
start
self
self[start]
self[start].valid_move?(end_pos)
move!(start, end_pos)
end_pos
start
exit
n
king_pos
n
check_color
n
color
king_pos
n
king_pos
n
self[start].valid_move?(end_pos)
end_pos
start
s
n
start_pos
n
nn
n
s
n
@current_player.color
@current_player
n
end_pos
start_pos
n
c
n
exit
n
s
@board.checkmate?(@current_player.color)
n
@board.checkmate?(@current_player.color)
n
@board.checkmate?(@current_player.color)
n
@board.checkmate?(@current_player.color)
exit
in_check?(color)
color
exit
n
king_pos
exit
king_pos
exit
n
=> 81:     end
   80:       self[pos].is_a?(King) && self[pos].color == color
all_pos.select do |pos|
all_pos
pos
n
s
self
color
exit
test_board
exit
test_board
exit
self
board
@board
this
start_pos
piece
n
s
piece
s
new_pos
exit
s
n
s
n
s
n
king_pos
exit
n
s
n
s
color
s
n
